[00:00] [music]

[00:02] Instructor: There are two other array methods, some and every. These actually aren't part of ES6, but I feel like they don't get enough love and really not enough people know about them, so I'm going to show you how to actually use them.

[00:14] Some and every will check the data in an array to check if some of the items meet what you're looking for or all of the items meet what you're looking for.

[00:24] I've got two examples right here. These are a whole bunch of ages. Is there at least one adult in the group? In Canada, you're 18 and you are considered an adult, so what we going to do is to say "const adultPresent = ages.some."

[00:43] Why some? Because we want to find at least one person in the group that is greater or equal to 18. Some, it's going to take a callback, which is age, and we want to say age is greater than or equal to 18.

[00:59] What it's going to do is check every single one, and as soon as it hits one of the items that is true, then it's going to return true in adultPresent. I'm going to say console.log(adultPresent) and we get true. Why? Because it hits that first one, and says that we have it.

[01:18] If I have const younguns equals one, two, two, five, and we check if there are any adults in the younguns, we obviously will get false.

[01:33] Next we want to know is everybody old enough to drink in this group? In Canada, at least, it's 19 to drink. We want to check if every single person in the array meets what we're looking for.

[01:52] What we're going to do is say "const allOldEnough = ages.every age >= 19." If everybody is greater than or equal to 19, it will return true, otherwise we get false. Which is false.

[02:13] Those are very simple, but can be very, very handy.