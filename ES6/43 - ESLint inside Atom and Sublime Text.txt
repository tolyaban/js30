[00:00] [music]

[00:03] Instructor: Ideally you have ESLint set up right in your editor, so as you write code you can just have it in real time telling you what your errors and what your warnings are. 

[00:11] Now I'm going to show how to use it in Sublime Text and Atom, since those are probably the two most popular ones used with JavaScript developers. However, every editor worth its salt has some sort of ESLint and linting integration so you can feel free to check that out with your specific editor. 

[00:29] If you don't use Atom or you don't use Sublime, feel free to skip these ones or if you use Atom skip the Sublime one, and I'll show you how to use exactly in Atom throughout this video.

[00:39] With Sublime Text we need to use something called SublimeLinter. SublimeLinter is sort of like a framework for all linting because there's PHPLint and CSSLint and SASSLint and there's all different kinds of linting that you can do for different languages. 

[00:54] Rather than installing an ESLint plugin directly, we install a linting framework, and then we will install plugin for that linting framework.

[01:02] What you need to do is, first of all, have package control installed. I assume you know how to do that, if not, you can take a look on how to do it or watch my Sublime Text video series.

[01:13] I'm going to type install package and from that you type SublimeLinter.

[01:18] [pause]

[01:18] Instructor: I don't see it showing up in here because I already have it installed. If you do not see it, that probably means you already have it installed as well. 

[01:37] After you've installed that one, go ahead and type install package again and you want the SublimeLinter and you just search for ESLint. Again, I don't see it as well, but it's going to say SublimeLinter-contrib-eslint, and  you go ahead and install that one. 

[01:54] If you want to know if you have them both installed you can just type list packages and you should look for lint, you see that I have SublimeLinter and SublimeLinter-contrib-eslint. Those two are the ones that I use to lint my JavaScript and you need to make sure that you have them installed.

[02:13] The third thing you need to do, and this is very, very important, is that you have to have ESLint globally installed. These plugins don't come with ESLint. They use your system's ESLint. 

[02:24] Again, if you've been doing this tutorial with me you already have it installed, but double check by saying eslint -- version and see that you have ESLint actually installed. In my experience, you have to give Sublime Text a full shutdown, so do a Sublime Text quit. Then open up Sublime Text again to get it to run. 

[02:42] Then what you need to do is turn it on so that it lints as to your preference. I like to have my linting every time I hit save, it's going to lint it. Sometimes you can also just lint it on demand, or people have it linting every single time that the type a character. 

[02:58] I find that when you are typing and you're not done writing your code, it will give you errors before you're done. Then on the other end, you just forget to lint, so I like to do it on save. The way that you do that is open up your command palette, Command shift P or control shift P on Windows and just type SublimeLinter. 

[03:14] You can see all of the possible options. What we want to do is Choose Lint Mode, and here we have "background," lint whenever text is modified, that's as you type. "Load or save," only do it when the file is loaded or saved. That's what I have it. 

"[03:31] Only do it on save." I do it on load, because when you open a new file I also want to lint it. Then finally, "manually lint only when requested." I could do it manually here, and then I could just write all the code not knowing there's any errors, and then I could just say "Lint this view," and it's going to lint it.

[03:51] You'll start seeing that you have dots show up in the sidebar here. That means that there's errors, in my side bar, and then it will actually underline the actual characters that are giving me grief.

[04:02] Sublime Text shows them in the status bar at the very bottom here. It's kind of small and it's a little bit out of the way, so you have to look back at it. What I like to do is just click on it and then read error, tweets is never reassigned. Use const. Prefer const. That's the error that I have. 

[04:22] I would change this one to const, give it a save, and now I see another error. Now I don't see any errors, actually, because I have to "Lint this view." I don't want to do that, so I'm going to say Choose Linting Mode and I'm going to say "load or save." 

[04:37] Now when I give it a save, immediately it shows up and I can just see here, a space is required after curly. I got a bit of a space issue here. A save, now I've still got something popping up here. What is it telling me? Space is required after the curly. Save, and I just go through these one by one, without having to run it from the command line. This does it in every single JS file.

[05:01] That's what Sublime is. It's pretty simple to get set up. Sometimes people have trouble getting it up and running, and it's really important that you do those three things. Make sure you have ESLink globally installed, make sure you have SublimeLinter installed first, and then install the contrib eslint package for SublimeLinter. 

[05:19] If you get all those three lined up perfectly, you should be in really good shape having linting working. You don't have to do it via the command line any longer.

[05:27] Atom works very much the same way, except they don't use the Sublime contrib eslint package, it uses its own package. Here I've got it up and I'm running using the same cobalt2 color scheme here. But one cool thing about Atom is that, first of all, it will give you the errors nicely down here. It's a little bit nicer than Sublime Text. 

[05:48] Also, when you click on one of them it will tell you unexpected var. It will give you the actual name of it, you can click on it, it will bring you to the documentation. The implementation in Atom is actually much better if you're using Atom. 

[06:03] How do we get this installed? First of all you need to go to your settings and install two packages. Those two packages are linter, which is like the linting framework, just like we did with Sublime Text, and then the second thing you want is linter-eslint. 

[06:18] I've already installed those, but you would just type here for linter. You'll go ahead install that, and then the other one is linter-eslint, which you would install that. 

[06:28] Once you have those installed, you simply go ahead and start writing your .JS code and you are up and running. No further configuration needed.